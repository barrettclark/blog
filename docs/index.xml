<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mike Perham</title>
    <link>https://www.mikeperham.com/</link>
    <description>Recent content on Mike Perham</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 10 Sep 2020 18:58:52 -0700</lastBuildDate>
    
	<atom:link href="https://www.mikeperham.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What&#39;s New in Sidekiq, 2020 edition</title>
      <link>https://www.mikeperham.com/2020/09/10/whats-new-in-sidekiq-2020-edition/</link>
      <pubDate>Thu, 10 Sep 2020 18:58:52 -0700</pubDate>
      
      <guid>https://www.mikeperham.com/2020/09/10/whats-new-in-sidekiq-2020-edition/</guid>
      <description>&amp;ldquo;Your work doesn&amp;rsquo;t matter if no one knows about it&amp;rdquo; &amp;ndash; some marketing genius
 COVID and wildfires have made this year hellish and really difficult to focus. I sympathize with all of my fellow engineers trying to maintain systems and improve apps while dealing with our rapidly changing society. Be kind to each other. ‚ù§Ô∏è
Let&amp;rsquo;s distract ourselves with a Sidekiq family update.
Sidekiq 6.1 The most visible change in Sidekiq 6.</description>
    </item>
    
    <item>
      <title>Trimming Dependencies: rack-protection</title>
      <link>https://www.mikeperham.com/2020/06/03/trimming-dependencies-rack-protection/</link>
      <pubDate>Wed, 03 Jun 2020 19:57:44 -0700</pubDate>
      
      <guid>https://www.mikeperham.com/2020/06/03/trimming-dependencies-rack-protection/</guid>
      <description>Recently I discussed how I was evaluating all of Sidekiq&amp;rsquo;s current dependencies to see if any could be removed or vendored to reduce upstream churn, security issues, and other maintenance chores. I was able to remove concurrent-ruby from Sidekiq Pro and Sidekiq Enterprise, which is a major win considering the size of that gem. A simple benchmark showed removing that gem shrunk a basic Sidekiq Pro process from 60MB to 50MB, a 16% improvement!</description>
    </item>
    
    <item>
      <title>Trimming Dependencies: concurrent-ruby</title>
      <link>https://www.mikeperham.com/2020/06/02/trimming-dependencies-concurrent-ruby/</link>
      <pubDate>Tue, 02 Jun 2020 15:41:10 -0700</pubDate>
      
      <guid>https://www.mikeperham.com/2020/06/02/trimming-dependencies-concurrent-ruby/</guid>
      <description>I&amp;rsquo;ve advocated for fewer dependencies for years now. Every long-running project needs to periodically re-evaluate their usage of each dependency and the value it provides. To that end, I recently considered Sidekiq&amp;rsquo;s dependencies:
 redis-rb - the Redis client connection_pool - provide threaded access to Redis connections rack - required to standardize Sidekiq&amp;rsquo;s Web UI rack-protection - necessary to provide CSRF protection for write actions in the Web UI  We might be able to remove rack-protection gem if we re-implement the CSRF functionality but none of the other gems are easy to remove (indeed, as I was writing this post, @seuros stepped up and took on issue #4587).</description>
    </item>
    
    <item>
      <title>My Coolest Code</title>
      <link>https://www.mikeperham.com/2020/05/04/my-coolest-code/</link>
      <pubDate>Mon, 04 May 2020 13:26:58 -0700</pubDate>
      
      <guid>https://www.mikeperham.com/2020/05/04/my-coolest-code/</guid>
      <description>What&amp;rsquo;s the coolest code you&amp;rsquo;ve written, for your own definition of cool?
EDI: the Worst Document Format? From 2003-2006 I worked at a startup building enterprise software for the health care space. We were building a system which allowed doctors offices to submit real-time transactions over the Internet, to migrate offices away from phone, fax or mail. Our first step was allowing real-time inquiry for insurance eligibility and benefits of a patient.</description>
    </item>
    
    <item>
      <title>Railsconf 2020 Virtual Hallway</title>
      <link>https://www.mikeperham.com/2020/04/29/railsconf-2020-virtual-hallway/</link>
      <pubDate>Wed, 29 Apr 2020 09:00:21 -0700</pubDate>
      
      <guid>https://www.mikeperham.com/2020/04/29/railsconf-2020-virtual-hallway/</guid>
      <description>I love Rubyconf and Railsconf. I&amp;rsquo;ve attended every one in the last 7 years and was super excited to learn that Railsconf would be held in my home town of Portland this year.
/play sadtrombone
Alas, the virus struck and Railsconf was cancelled. Railsconf 2020.2 Couch Edition was announced but my favorite part of conferences is the hallway track: meeting old friends in person, making new friends, talking about our lives and crazy ideas we have to make Ruby and open source better.</description>
    </item>
    
    <item>
      <title>Creating a private, commercial Docker registry</title>
      <link>https://www.mikeperham.com/2020/03/09/creating-a-private-commercial-docker-registry/</link>
      <pubDate>Mon, 09 Mar 2020 09:00:00 -0800</pubDate>
      
      <guid>https://www.mikeperham.com/2020/03/09/creating-a-private-commercial-docker-registry/</guid>
      <description>One thing I&amp;rsquo;ve come to respect about containers are how easy they make packaging and running Linux infrastructure. No more fighting the distro for the right version of a package, a dozen builds for a dozen distro-specific packages, etc. Everything is encapsulated within a single container image that runs on any modern Linux.
It hasn&amp;rsquo;t escaped my notice that most of my Faktory users are using the Docker image to run Faktory which means that most of my Faktory Pro and Enterprise customers will want a Docker image too.</description>
    </item>
    
    <item>
      <title>Faktory Enterprise</title>
      <link>https://www.mikeperham.com/2020/01/08/faktory-enterprise/</link>
      <pubDate>Wed, 08 Jan 2020 09:16:51 -0800</pubDate>
      
      <guid>https://www.mikeperham.com/2020/01/08/faktory-enterprise/</guid>
      <description>The best way to kick off 2020 is by shipping something massive for me: Faktory Enterprise.
Faktory is an open source, language-independent background job system. If you want to scale your business app to many millions of transactions per day, background jobs are the best way to do it. Celery, Bull, Sidekiq are all popular but they are limited to the one language they are written in (Python, JS and Ruby respectively).</description>
    </item>
    
    <item>
      <title>Workload Isolation with Queue Sharding</title>
      <link>https://www.mikeperham.com/2019/12/17/workload-isolation-with-queue-sharding/</link>
      <pubDate>Tue, 17 Dec 2019 10:55:37 -0800</pubDate>
      
      <guid>https://www.mikeperham.com/2019/12/17/workload-isolation-with-queue-sharding/</guid>
      <description>A number of customers have contacted me with a common problem:
 We run a multi-tenant system where our users can perform an action which results in a huge number of jobs being enqueued. When this happens, other users see significant delays in their jobs being processed while our Sidekiq cluster works through the backlog for that one user.
 The issue is this: if you give 100% of your resources to process that user&amp;rsquo;s backlog, 100% of your customers will feel the pain of that backlog delay.</description>
    </item>
    
    <item>
      <title>Welcome to Sidekiq 6.0</title>
      <link>https://www.mikeperham.com/2019/09/03/welcome-to-sidekiq-6.0/</link>
      <pubDate>Tue, 03 Sep 2019 09:00:00 +0000</pubDate>
      
      <guid>https://www.mikeperham.com/2019/09/03/welcome-to-sidekiq-6.0/</guid>
      <description>I&amp;rsquo;m happy to announce that Sidekiq 6.0, Sidekiq Pro 5.0 and Sidekiq Enterprise 2.0 are now generally available after nine months of work by various contributors! üéâüéÇ
No More Daemonizing Sidekiq 6.0 no longer offers the ability to run as an circa-1990s init.d-style daemon by removing the logfile, pidfile and daemonize command line flags. For a decade, all major Unix systems have offered init tooling that handle these concerns automatically for the developer and sysadmin.</description>
    </item>
    
    <item>
      <title>Something For Nothing</title>
      <link>https://www.mikeperham.com/2019/07/19/something-for-nothing/</link>
      <pubDate>Fri, 19 Jul 2019 10:27:11 -0700</pubDate>
      
      <guid>https://www.mikeperham.com/2019/07/19/something-for-nothing/</guid>
      <description>Do you like free things? Would you like to get something for nothing? Are you a Sidekiq user? If you answered yes to these questions, I have a case study in how one customer effectively got Sidekiq Enterprise for free.
One Friday morning, two engineers jumped into my weekly Happy Hour to ask me about a Sidekiq problem they were having.
 &amp;ldquo;We have two Sidekiq dynos with 40 threads each: we find that after about 5 minutes, they are only using about 20 threads; shouldn&amp;rsquo;t all 40 threads pick up jobs?</description>
    </item>
    
  </channel>
</rss>
